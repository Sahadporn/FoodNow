{
	"info": {
		"_postman_id": "45a9404d-ad75-4ab4-bfe8-3f03ce3070eb",
		"name": "FoodNow API",
		"description": "The FoodNow API is the API for connecting to FoodNow backend services.\n\nThe API is designed around REST. It has predictable resource-oriented URLs, returns JSON responses, and uses standard HTTP response codes.\n\n### Errors\n\nThe FoodNow API uses standard HTTP response codes to indicate the success or failure of an API request. \n\n#### HTTP STATUS CODE SUMMARY\n**200 - OK**. Everything worked as expected.\n**201 - Created**. Create success.\n\n**400 - Bad Request**. The request was unacceptable, often due to missing a required parameter.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Get Customer details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const r = {",
									"  url: 'http://localhost:3030/authentication',",
									"  method: 'POST',",
									"  header: 'Content-Type:application/json',",
									"  body: {",
									"    mode: 'raw',",
									"    raw: JSON.stringify({",
									"      strategy: \"local\",",
									"      username: 'jane',",
									"      password: \"supersecret\"",
									"    })",
									"  }",
									"}",
									"pm.sendRequest(r, function (err, response) {",
									"  pm.environment.set('accessToken', response.json().accessToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/users/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "User Id"
								}
							]
						},
						"description": "Retrieve customer information."
					},
					"response": [
						{
							"name": "Get Customer details",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{url_localhost}}/users/2",
									"host": [
										"{{url_localhost}}"
									],
									"path": [
										"users",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"username\": \"venom\",\n    \"address\" : \"\"11/90 ถนนราชพฤกษ์ ตำบลท่าอิฐ อำเภอปากเกร็ด จังหวัดนนทบุรี 11120\",\n    \"Tel\" : \"0858705321\"\n    \"permissions\": \"user\",\n    \"updatedAt\": \"2021-05-10T07:24:15.946Z\",\n    \"createdAt\": \"2021-05-10T07:24:15.946Z\"\n}"
						}
					]
				},
				{
					"name": "signup",
					"request": {
						"method": "GET",
						"header": [],
						"url": null,
						"description": "API will allow to do sign up based on type of users i.e. if a regular customer or restaurant admin."
					},
					"response": [
						{
							"name": "signup new Customer",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "venom",
											"type": "text"
										},
										{
											"key": "email",
											"value": "venom@gmail.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "\"ven@m479\"",
											"type": "text"
										},
										{
											"key": "confirm password",
											"value": "\"ven@m479\"",
											"type": "text"
										},
										{
											"key": "address",
											"value": "\"11/90 ถนนราชพฤกษ์ ตำบลท่าอิฐ อำเภอปากเกร็ด จังหวัดนนทบุรี 11120\"",
											"type": "text"
										},
										{
											"key": "permission",
											"value": "customer",
											"type": "text"
										},
										{
											"key": "Tel",
											"value": "\"0858705321\"",
											"type": "text"
										}
									]
								},
								"url": null
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"username\": \"venom\",\n    \"permissions\": \"customer\",\n    \"updatedAt\": \"2021-05-10T07:24:15.946Z\",\n    \"createdAt\": \"2021-05-10T07:24:15.946Z\"\n}"
						},
						{
							"name": "new restaurant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "logo",
											"type": "file",
											"src": "RIkT4gcBL/gd-logo.jpeg"
										},
										{
											"key": "banner",
											"type": "file",
											"src": "K6jdMJnFk/gd.jpeg"
										},
										{
											"key": "password",
											"value": "\"gd0009!\"",
											"type": "text"
										},
										{
											"key": "confirm password",
											"value": "gd0009",
											"type": "text"
										},
										{
											"key": "address",
											"value": "\"327 Maha Chai Rd, Samran Rat, Phra Nakhon, Bangkok 10200. \"",
											"type": "text"
										},
										{
											"key": "restaurant name",
											"value": "\"ร้านเจ๊ไฝ Michelin star\"",
											"type": "text"
										},
										{
											"key": "typeoffood",
											"value": "\"thai\"",
											"type": "text"
										},
										{
											"key": "open time",
											"value": "\"10 AM - 23 PM\"",
											"type": "text"
										},
										{
											"key": "status",
											"value": "open",
											"type": "text"
										},
										{
											"key": "description",
											"value": "อาหารไทย อาหารทะเลสตรีทฟู้ด ระดับมิชิลิน",
											"type": "text"
										},
										{
											"key": "Tel",
											"value": "\"022239384\"",
											"type": "text"
										}
									]
								},
								"url": null
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\" : \"2\",\n\t\"name\": \"ร้านเจ๊ไฝ Michelin star\",\n    \"updatedAt\": \"2021-05-09iT08:38:07.208Z\",\n    \"createdAt\": \"2021-05-09T03:38:07.208Z\"    \n}"
						}
					]
				},
				{
					"name": "login",
					"request": {
						"method": "GET",
						"header": [],
						"url": null,
						"description": "These API will allow to \n- login\n- forget password which a reset password link will be sent to registered email."
					},
					"response": [
						{
							"name": "login user",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"venom\",\n\t\"password\": \"1234\",\n    \"remember\" : \"y\"\n}"
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"username\": \"venom\",\n    \"permissions\": \"customer\",\n    \"loginAt\": \"2021-05-11T03:23:15.946Z\",\n    \"createdAt\": \"2021-05-10T07:24:15.946Z\"\n}"
						},
						{
							"name": "forget password",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"venom@gmail.com\"\n}"
								},
								"url": {
									"raw": "{{url}}/forgotpassword",
									"host": [
										"{{url}}"
									],
									"path": [
										"forgotpassword"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Reset password link sent\"\n}"
						}
					]
				}
			],
			"description": "The FoodNow implement 2 roles with different permission levels:\n\n- Regular Customer : Can see all restaurants and place orders from them\n- Restaurant Admin: Can CRUD its restaurant details ,menu and dish.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Restaurants",
			"item": [
				{
					"name": "Get Restaurants list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const r = {",
									"  url: 'http://localhost:3030/authentication',",
									"  method: 'POST',",
									"  header: 'Content-Type:application/json',",
									"  body: {",
									"    mode: 'raw',",
									"    raw: JSON.stringify({",
									"      strategy: \"local\",",
									"      username: 'jane',",
									"      password: \"supersecret\"",
									"    })",
									"  }",
									"}",
									"pm.sendRequest(r, function (err, response) {",
									"  pm.environment.set('accessToken', response.json().accessToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/restaurants/?last=id",
							"host": [
								"{{url}}"
							],
							"path": [
								"restaurants",
								""
							],
							"query": [
								{
									"key": "last",
									"value": "id",
									"description": "last id of restaurant return by previous call. frist call will be 0."
								}
							]
						},
						"description": "This is to get restaurant.list. It will return 10 restaurants at a time,"
					},
					"response": [
						{
							"name": "Get Restaurants list",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/restaurants",
									"host": [
										"{{url}}"
									],
									"path": [
										"restaurants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"total\": 3,\n    \"limit\": 10,\n    \"skip\": 0,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"CANTINA WINE BAR & ITALIAN KITCHEN\",\n            \"typeoffood\": \"italian\",\n            \"Tel\" : \"020385114\",\n        },\n        {\n            \"id\" : \"2\",\n            \"name\": \"ร้านเจ๊ไฝ Michelin star\",\n            \"typeoffood\": \"thai\",\n            \"Tel\" : \"022239384\",\n        },      \n        {\n            \"id\": 3,\n            \"name\": \"Ichika Omakase\",\n            \"typeOfFood\": \"japanese\",\n            \"Tel\" : \"061 165 6546\",\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Restaurant details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const r = {",
									"  url: 'http://localhost:3030/authentication',",
									"  method: 'POST',",
									"  header: 'Content-Type:application/json',",
									"  body: {",
									"    mode: 'raw',",
									"    raw: JSON.stringify({",
									"      strategy: \"local\",",
									"      username: 'jane',",
									"      password: \"supersecret\"",
									"    })",
									"  }",
									"}",
									"pm.sendRequest(r, function (err, response) {",
									"  pm.environment.set('accessToken', response.json().accessToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/restaurants/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"restaurants",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Restaurant Id"
								}
							]
						},
						"description": "This API will return a specific details of this restaurant."
					},
					"response": [
						{
							"name": "Get Restaurant details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/restaurants/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"restaurants",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"sakura restaurant\",\n    \"description\": \"Sushi is a Japanese dish of prepared vinegared rice, usually with some sugar and salt, accompanying a variety of ingredients, such as seafood, vegetables, and occasionally tropical fruits.\",\n    \"typeOfFood\": \"japanese\",\n    \"createdAt\": \"2020-06-03 08:34:19.516 +00:00\",\n    \"updatedAt\": \"2020-06-03 08:34:19.516 +00:00\",\n    \"userId\": 4,\n    \"isBlockedUser\": false,\n    \"isOwner\": true\n}"
						}
					]
				},
				{
					"name": "Update Restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const r = {",
									"  url: 'http://localhost:3030/authentication',",
									"  method: 'POST',",
									"  header: 'Content-Type:application/json',",
									"  body: {",
									"    mode: 'raw',",
									"    raw: JSON.stringify({",
									"      strategy: \"local\",",
									"      username: 'jane',",
									"      password: \"supersecret\"",
									"    })",
									"  }",
									"}",
									"pm.sendRequest(r, function (err, response) {",
									"  pm.environment.set('accessToken', response.json().accessToken);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/restaurants/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"restaurants",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Restaurant Id"
								}
							]
						},
						"description": "This API is to update information about this restaurant."
					},
					"response": [
						{
							"name": "Update Restaurant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "logo",
											"type": "file",
											"src": "lpp0sIJXQ/gd-logo.jpeg"
										},
										{
											"key": "banner",
											"type": "file",
											"src": "elIDnb4z7/gd.jpeg"
										},
										{
											"key": "password",
											"value": "\"gd1009\"",
											"type": "text"
										},
										{
											"key": "confirm password",
											"value": "\"gd1009\"",
											"type": "text"
										},
										{
											"key": "address",
											"value": "\"327 Maha Chai Rd, Samran Rat, Phra Nakhon, Bangkok 10200. \"",
											"type": "text"
										},
										{
											"key": "restaurant name",
											"value": "\"ร้านเจ๊ไฝ Michelin star\"",
											"type": "text"
										},
										{
											"key": "typeoffood",
											"value": "thai",
											"type": "text"
										},
										{
											"key": "open time",
											"value": "\"10 AM - 23 PM\"",
											"type": "text"
										},
										{
											"key": "description",
											"value": "อาหารไทย อาหารทะเลสตรีทฟู้ด ระดับมิชิลิน",
											"type": "text"
										},
										{
											"key": "Tel",
											"value": "\"022239384\"",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_localhost}}/restaurants/5",
									"host": [
										"{{url_localhost}}"
									],
									"path": [
										"restaurants",
										"5"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\" : \"2\",\n\t\"name\": \"ร้านเจ๊ไฝ Michelin star\",\n    \"updatedAt\": \"2021-05-10iT08:38:07.208Z\",\n    \"createdAt\": \"2021-05-09T03:38:07.208Z\"    \n}"
						}
					]
				}
			],
			"description": "This is a set of API that allow to doo CRUD with restaurant. Only restaurant admin permission can do this activity.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Menu",
			"item": [
				{
					"name": "Add Dish",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Meal 1 for Restaurant 2 test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.environment.set('mealId_2_1', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n"
						},
						"url": {
							"raw": "{{url}}/adddishs",
							"host": [
								"{{url}}"
							],
							"path": [
								"adddishs"
							]
						},
						"description": "This request creates a new dish. info to add are a name, image, a description, and a price."
					},
					"response": [
						{
							"name": "Add Dish",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "ไข่เจียวปู",
											"type": "text"
										},
										{
											"key": "image",
											"type": "file",
											"src": "6zD-EjsxY/menu1.jpeg"
										},
										{
											"key": "description",
											"value": "\"ไข่เจียวปูที่เสิร์ฟมาร้อนๆ เนื้อกรรเชียงปูอัดแน่นอยู่ภายใน ด้านนอกมีไข่เจียวกรอบนอกนุ่มในหุ้มอยู่\"",
											"type": "text"
										},
										{
											"key": "price",
											"value": "1000",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/AddDish",
									"host": [
										"{{url}}"
									],
									"path": [
										"AddDish"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": 14,\n    \"restaurantId\": 2,\n    \"updatedAt\": \"2021-05-11T08:48:19.184Z\",\n    \"createdAt\": \"2021-05-11T08:48:19.184Z\"\n}"
						}
					]
				},
				{
					"name": "Get all Dishs for a restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all Restaurant 2 Meals successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check the size of the meals\", function () {",
									"    pm.expect(pm.response.json().data.length).to.equal(4);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/Menu/?restaurantId=:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"Menu",
								""
							],
							"query": [
								{
									"key": "restaurantId",
									"value": ":id",
									"description": "Restaurant Id"
								}
							]
						},
						"description": "Obtain a list with all dish of this Restaurant."
					},
					"response": [
						{
							"name": "Get all Dishs for a restaurant",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/menus/?restaurantId=2",
									"host": [
										"{{url}}"
									],
									"path": [
										"menus",
										""
									],
									"query": [
										{
											"key": "restaurantId",
											"value": "2",
											"description": "Restaurant Id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"total\": 4,\n    \"limit\": 10,\n    \"data\": [\n        {\n            \"id\": 4,\n            \"name\": \"ราดหน้าทะเล\",\n            \"description\": \"หอมน้ำราดหน้าที่ปรุงมาแบบกลมกล่อมหอมอร่อยถูกปาก ใส่กุ้งลายเสือตัวโต หมึกสด และกรรเชียงปู ส่วนผักก็มีคะน้าฮ่องกง กะหล่ำดอก บล็อกโคลี และแครอท เราเลือกเส้นใหญ่ใส่มาในราดหน้า ที่เส้นใหญ่ถูกนำไปผัดบนเตาถ่านได้กลิ่นหอมกระทะชวนกิน เส้นหอมๆ เหนียวนุ่มกำลังดี กับน้ำราดหน้าและสารพัดซีฟู้ดที่สดใหม่\",\n            \"price\": 500,\n            \"createdAt\": \"2021-05-12 02:15:19.838 +00:00\",\n            \"updatedAt\": \"2021-05-12 08:34:19.838 +00:00\",\n            \"restaurantId\": 2\n        },\n        {\n            \"id\": 5,\n            \"name\": \"สุกี้น้ำกุ้ง\",\n            \"description\": \"สุกี้ที่ใส่ผักมาหลากหลาย พร้อมกับกุ้งลายเสือตัวโต เสิร์ฟมาร้อนๆ กุ้งสุกกำลังดี เนื้อยังหวานเด้งกรอบ กินคู่กับน้ำจิ้มสุกี้สูตรของทางร้านที่ออกหวานๆ เค็มๆ จากเต้าหู้ยี้\",\n            \"price\": 500,\n            \"createdAt\": \"2021-05-12 02:37:20.132 +00:00\",\n            \"updatedAt\": \"2021-05-12 02:37:20.132 +00:00\",\n            \"restaurantId\": 2\n        },\n        {\n            \"id\": 7,\n            \"name\": \"กะเพราหมูราดข้าว\",\n            \"description\": \"ใช้เนื้อหมูมาหมักจนนุ่ม ก่อนจะนำไปผัดกะเพราแบบแห้งๆ ใส่พริก กระเทียม และใบกะเพรา ปรุงรสให้ออกเค็มนำ เสิร์ฟพร้อมข้าวหอมมะลิร้อนๆ เวลากินแนะนำให้คลุกเคล้าผัดกะเพราให้เข้ากับข้าวสวย จะได้ผัดกะเพราหมูรสกลมกล่อม ไม่เผ็ดมากเกินไป เนื้อหมูนุ่มอร่อยถูกปาก\",\n            \"price\": 200,\n            \"createdAt\": \"2021-05-12 02:40:20.657 +00:00\",\n            \"updatedAt\": \"2021-05-12 02:40:20.657 +00:00\",\n            \"restaurantId\": 2\n        },\n        {\n            \"id\": 14,\n            \"name\": \"ไข่เจียวปู\",\n            \"description\": \"ไข่เจียวปูที่เสิร์ฟมาร้อนๆ เนื้อกรรเชียงปูอัดแน่นอยู่ภายใน ด้านนอกมีไข่เจียวกรอบนอกนุ่มในหุ้มอยู่\",\n            \"price\": 1000,\n            \"updatedAt\": \"2021-05-11T08:48:19.184Z\",\n            \"createdAt\": \"2021-05-11T08:48:19.184Z\",\n            \"restaurantId\": 2\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Update Dish",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Meal 1 for Restaurant 2 test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.environment.set('mealId_2_1', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{name}}\",\n\t\"description\": \"{{description}}\",\n\t\"price\": {{price}},\n\t\"restaurantId\": {{restaurantId}} \n}\n"
						},
						"url": {
							"raw": "{{url}}/meals/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"meals",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "This API is to update dish information."
					},
					"response": [
						{
							"name": "UpdateDish",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "ไข่เจียวปู",
											"type": "text"
										},
										{
											"key": "description",
											"value": "\"ไข่เจียวปูที่เสิร์ฟมาร้อนๆ เนื้อกรรเชียงปูอัดแน่นอยู่ภายใน ด้านนอกมีไข่เจียวกรอบนอกนุ่มในหุ้มอยู่\"",
											"type": "text"
										},
										{
											"key": "price",
											"value": "1500",
											"type": "text"
										},
										{
											"key": "image",
											"type": "file",
											"src": "xUTA45JFF/menu1.jpeg"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_localhost}}/Menu/14",
									"host": [
										"{{url_localhost}}"
									],
									"path": [
										"Menu",
										"14"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n            \"id\": 14,\n            \"name\": \"ไข่เจียวปู\",\n            \"description\": \"ไข่เจียวปูที่เสิร์ฟมาร้อนๆ เนื้อกรรเชียงปูอัดแน่นอยู่ภายใน ด้านนอกมีไข่เจียวกรอบนอกนุ่มในหุ้มอยู่\",\n            \"price\": 1500,\n            \"updatedAt\": \"2021-05-12T02:48:20.184Z\",\n            \"createdAt\": \"2021-05-11T08:48:19.184Z\",\n            \"restaurantId\": 2\n}"
						}
					]
				},
				{
					"name": "Delete Meal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Meal 1 for Restaurant 2 test\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.environment.set('mealId_2_1', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/menu/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"menu",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "This request deletes a dish."
					},
					"response": [
						{
							"name": "Delete Meal",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/menu/5",
									"host": [
										"{{url}}"
									],
									"path": [
										"menu",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"message\": \"Dish deleted successfully.\"\n}"
						}
					]
				}
			],
			"description": "API to CRUD about menu of this restaurant.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const r = {",
							"  url: 'http://localhost:3030/authentication',",
							"  method: 'POST',",
							"  header: 'Content-Type:application/json',",
							"  body: {",
							"    mode: 'raw',",
							"    raw: JSON.stringify({",
							"      strategy: \"local\",",
							"      username: pm.environment.get('username_owner_1'),",
							"      password: \"supersecret\"",
							"    })",
							"  }",
							"}",
							"pm.sendRequest(r, function (err, response) {",
							"  console.log(response.json());",
							"  pm.environment.set('accessToken', response.json().accessToken);",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Customer 1 Creates Order 1 at Restaurant 1 successfully\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.environment.set('orderId_1', pm.response.json().id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const r = {",
									"  url: 'http://localhost:3030/meals?restaurantId=' + pm.environment.get('restaurantId_1'),",
									"  method: 'GET',",
									"  header: {",
									"    'Content-Type': 'application/json',",
									"    \"Authorization\": \"Bearer \" + pm.variables.get(\"accessToken\"),",
									"  }",
									"}",
									"pm.sendRequest(r, function (err, response) {",
									"    const orderitems = response.json().data.map((meal, index) => {",
									"        return {",
									"            name: meal.name,",
									"            price: meal.price,",
									"            id: meal.id,",
									"            quantity: index + 1",
									"            }",
									"    });",
									"    pm.variables.set(\"orderitems\", JSON.stringify(orderitems));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders"
							]
						},
						"description": "This API is to place a new Order."
					},
					"response": [
						{
							"name": "Create Order",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"restaurantId\": 2,\n    \"orderitems\": [\n        {\n            \"name\": \"สุกี้น้ำกุ้ง\",\n            \"price\": 500,\n            \"id\": 5,\n            \"quantity\": 10\n        },\n        {\n            \"name\": \"ราดหน้าทะเล\",\n            \"price\": 500,\n            \"id\": 4,\n            \"quantity\": 1\n        },\n    ],\n    \"totalAmount\": 5500,\n    \"remark\" : \"bring me chopstick too\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_localhost}}/orders",
									"host": [
										"{{url_localhost}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"status\": \"placed\",\n    \"orderId\": 5,\n    \"restaurantId\": 2,\n    \"totalAmount\": 5500,\n    \"userId\": 1,\n    \"updatedAt\": \"2021-05-13T01:00:58.034Z\",\n    \"createdAt\": \"2021-05-13T01:00:58.034Z\"\n}"
						}
					]
				},
				{
					"name": "Get Order details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/orders/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Order Id"
								}
							]
						},
						"description": "It returns the details of an Order, and it also includes:\n\n- The list of meals, with its quantity.\n- Related User information.\n- Related Restaurant information."
					},
					"response": [
						{
							"name": "Get Order details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_localhost}}/orders/5",
									"host": [
										"{{url_localhost}}"
									],
									"path": [
										"orders",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": 5,\n    \"totalAmount\": 5500,\n    \"status\": \"placed\",\n    \"updatedAt\": \"2021-05-13T01:00:58.034Z\",\n    \"createdAt\": \"2021-05-13T01:00:58.034Z\",\n    \"userId\": 1,\n    \"restaurantId\": 2,\n    \"user\": {\n        \"id\": 1,\n        \"username\": \"venom\",\n        \"updatedAt\": \"2021-05-10T07:24:15.946Z\",\n        \"createdAt\": \"2021-05-10T07:24:15.946Z\"\n    },\n    \"orderitems\": [\n        {\n            \"id\": 5,\n            \"name\": \"สุกี้น้ำกุ้ง\",\n            \"price\": 500,\n            \"quantity\": 10,\n            \"updatedAt\": \"2021-05-13T01:00:58.034Z\",\n            \"createdAt\": \"2021-05-13T01:00:58.034Z\",\n            \"orderId\": 5\n        },\n        {\n            \"id\": 4,\n            \"name\": \"ราดหน้าทะเล\",\n            \"price\": 500,\n            \"quantity\": 1,\n            \"updatedAt\": \"2021-05-13T01:00:58.034Z\",\n            \"createdAt\": \"2021-05-13T01:00:58.034Z\",\n            \"orderId\": 5\n        },\n        {\n            \"id\": 5,\n            \"name\": \"Gorgeous Cotton Pizza\",\n            \"quantity\": 1,\n            \"price\": 5,\n            \"mealId\": 10,\n            \"createdAt\": \"2020-06-03 09:00:58.046 +00:00\",\n            \"updatedAt\": \"2020-06-03 09:00:58.046 +00:00\",\n            \"orderId\": 2\n        }\n    ],\n    \"restaurant\": {\n            \"id\" : \"2\",\n            \"name\": \"ร้านเจ๊ไฝ Michelin star\",\n            \"typeoffood\": \"thai\",\n            \"Tel\" : \"022239384\"\n    }\n}"
						}
					]
				},
				{
					"name": "Update Order Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set Order Status as Processing by Owner\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"status\": \"{{new_status}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/orders/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Order Id"
								}
							]
						},
						"description": "Restaurant employee  can change the order status.\nStatus respecting below flow and permissions:\n- Processing: Once a client places an Order\n- Canceled: A customer  cancel the Order\n- Rejected: A Restaurant employee starts to make the meals.\n- Delivering: The Restaurant is delivering the order.\n- Success: Order is received by a customer updated by Restaurant employee.\n\nStatus should not allowed to move back."
					},
					"response": [
						{
							"name": "Update Order Status to Processing",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_localhost}}/orders/5",
									"host": [
										"{{url_localhost}}"
									],
									"path": [
										"orders",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": 5,\n    \"totalAmount\": 5500,\n    \"status\": \"processing\",\n    \"updatedAt\": \"2021-05-13T01:01:02.001Z\",\n    \"createdAt\": \"2021-05-13T01:00:58.034Z\",\n    \"userId\": 1,\n    \"restaurantId\": 2\n}"
						}
					]
				},
				{
					"name": "Get all Orders for a Restaurant",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/orders/?restaurantId=:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"orders",
								""
							],
							"query": [
								{
									"key": "restaurantId",
									"value": ":id"
								}
							]
						},
						"description": "This API is to get all orders handled by this restaurant."
					},
					"response": [
						{
							"name": "Get All Orders",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_localhost}}/orders/?restaurantId=2",
									"host": [
										"{{url_localhost}}"
									],
									"path": [
										"orders",
										""
									],
									"query": [
										{
											"key": "restaurantId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"total\": 2,\n    \"limit\": 10,\n    \"skip\": 0,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"totalAmount\": ,\n            \"status\": \"received\",\n            \"updatedAt\": \"2021-05-13T01:00:58.034Z\",\n            \"createdAt\": \"2021-05-13T01:00:58.034Z\",\n            \"userId\": 1,\n            \"restaurantId\": 1,\n            \"user\": {\n                \"id\": 1,\n                \"username\": \"ku_wonderwoman\"\n            },\n            \"restaurant\": {\n                \"id\": 1,\n                \"name\": \"CANTINA WINE BAR & ITALIAN KITCHEN\"\n            }\n        },\n        {\n            \"id\": 2,\n            \"totalAmount\": 165.91,\n            \"status\": \"processing\",\n            \"createdAt\": \"2020-06-03T09:00:58.034Z\",\n            \"updatedAt\": \"2020-06-03T09:08:42.049Z\",\n            \"userId\": 4,\n            \"restaurantId\": 1,\n            \"user\": {\n                \"id\": 4,\n                \"username\": \"Deja.Rippin\"\n            },\n            \"restaurant\": {\n                \"id\": 1,\n                \"name\": \"La Tagliatella\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "CancelOrder",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/Orders/:order id",
							"host": [
								"{{url}}"
							],
							"path": [
								"Orders",
								":order id"
							],
							"variable": [
								{
									"key": "order id",
									"value": "5",
									"description": "Order Id"
								}
							]
						},
						"description": "This API is used to cancel order by customer or restaurant employee."
					},
					"response": [
						{
							"name": "CancelOrder",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/Orders:5",
									"host": [
										"{{url}}"
									],
									"path": [
										"Orders:5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Order Cancel by restaurant successfully.\"\n}"
						}
					]
				}
			],
			"description": "This set of API will allow to submit and view order information.\n\nAn Order should be placed for a single Restaurant only, but it can have multiple dishs.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Analysis",
			"request": {
				"method": "GET",
				"header": [],
				"url": null,
				"description": "This set of API is used to generate 3 reports i.e.\n- Favorite menu.\n- Income\n- Frequent customer.\n\nThis report will be for a specific restaurant. It should be used by restaurant permission."
			},
			"response": [
				{
					"name": "Favorite Menu",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/analysis/?reportId=:1",
							"host": [
								"{{url}}"
							],
							"path": [
								"analysis",
								""
							],
							"query": [
								{
									"key": "reportId",
									"value": ":1",
									"description": "1 = Favorite Menu"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"total\": 4,\n    \"limit\": 10,\n    \"restaurantId\" : 2\n    \"data\": [\n        {\n            \"month\": 1,\n            \"name\": \"ไข่เจียวปู\",            \n            \"percent\": 62.5,\n        },\n        {\n            \"dishId\": 7,\n            \"name\": \"กะเพราหมูราดข้าว\",  \n            \"percent\": 12.5,\n        },\n        {\n            \"dishId\": 4,\n            \"name\": \"ราดหน้าทะเล\",          \n            \"percent\": 12.5,\n        },\n        {\n            \"dishId\": 5,\n            \"name\": \"สุกี้น้ำกุ้ง\",\n            \"percent\": 12.5,\n        }\n    ]\n}"
				},
				{
					"name": "Income",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/analysis/?reportId=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"analysis",
								""
							],
							"query": [
								{
									"key": "reportId",
									"value": "2",
									"description": "2 = income"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"total\": 4,\n    \"limit\": 10,\n    \"restaurantId\" : 2\n    \"data\": [\n        {\n            \"month\": 1,\n            \"income\": 9000,\n        },\n        {\n            \"month\": 2,\n            \"income\": 4000,\n        },\n        {\n            \"month\": 3,\n            \"income\": 7000,\n        },\n        {\n            \"month\": 4,\n            \"income\": 5000,\n        },\n        {\n            \"month\": 5,\n            \"income\": 7000,\n        },\n        {\n            \"month\": 6,\n            \"income\": 6000,\n        },\n        {\n            \"month\": 7,\n            \"income\": 9000,\n        },\n        {\n            \"month\": 8,\n            \"income\": 6000,\n        },\n        {\n            \"month\": 9,\n            \"income\": 5000,\n        },\n        {\n            \"month\": 10,\n            \"income\": 6000,\n        },\n        {\n            \"month\": 11,\n            \"income\": 7000,\n        },\n        {\n            \"month\": 12,\n            \"income\": 5000,\n        }\n    ]\n"
				},
				{
					"name": "FrequentUser",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/analysis/?reportId=3",
							"host": [
								"{{url}}"
							],
							"path": [
								"analysis",
								""
							],
							"query": [
								{
									"key": "reportId",
									"value": "3",
									"description": "3= frequent user"
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"total\": 4,\n    \"limit\": 10,\n    \"restaurantId\" : 2\n    \"data\": [\n        {\n            \"month\": 1,\n            \"user items\": {\n                {\n                    \"userId\": 1,\n                    \"username\": \"ku_wonderwoman\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 150\n                },\n                {\n                    \"userId\": 12,\n                    \"username\": \"Clark Kent\"\n                    \"thisyear\" : 10,\n                    \"lastyear\" : 100\n                },\n                {\n                    \"userId\": 2,\n                    \"username\": \"ไบรท์ วชิรวิทย์\"\n                    \"thisyear\" : 400,\n                    \"lastyear\" : 20\n                },\n                {\n                    \"userId\": 110,\n                    \"username\": \"Jung Kook\"\n                    \"thisyear\" : 20,\n                    \"lastyear\" : 250\n                },\n                {\n                    \"userId\": 21,\n                    \"username\": \"Ji min\"\n                    \"thisyear\" : 250,\n                    \"lastyear\" : 30\n                },\n                {\n                    \"userId\": 32,\n                    \"username\": \"Sugar\"\n                    \"thisyear\" : 520,\n                    \"lastyear\" : 20\n                }\n            }\n        },\n        {\n            \"month\": 2,\n            \"user items\": {\n                {\n                    \"userId\": 1,\n                    \"username\": \"ku_wonderwoman\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 150\n                },\n                {\n                    \"userId\": 12,\n                    \"username\": \"Clark Kent\"\n                    \"thisyear\" : 110,\n                    \"lastyear\" : 100\n                },\n                {\n                    \"userId\": 2,\n                    \"username\": \"ไบรท์ วชิรวิทย์\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 260\n                },\n                {\n                    \"userId\": 110,\n                    \"username\": \"Jung Kook\"\n                    \"thisyear\" : 20,\n                    \"lastyear\" : 250\n                },\n                {\n                    \"userId\": 21,\n                    \"username\": \"Ji min\"\n                    \"thisyear\" : 250,\n                    \"lastyear\" : 30\n                },\n                {\n                    \"userId\": 32,\n                    \"username\": \"Sugar\"\n                    \"thisyear\" : 520,\n                    \"lastyear\" : 20\n                }\n            }\n        },\n        {\n            \"month\": 3,\n            \"user items\": {\n                {\n                    \"userId\": 1,\n                    \"username\": \"ku_wonderwoman\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 150\n                },\n                {\n                    \"userId\": 12,\n                    \"username\": \"Clark Kent\"\n                    \"thisyear\" : 110,\n                    \"lastyear\" : 100\n                },\n                {\n                    \"userId\": 2,\n                    \"username\": \"ไบรท์ วชิรวิทย์\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 260\n                },\n                {\n                    \"userId\": 110,\n                    \"username\": \"Jung Kook\"\n                    \"thisyear\" : 20,\n                    \"lastyear\" : 250\n                },\n                {\n                    \"userId\": 21,\n                    \"username\": \"Ji min\"\n                    \"thisyear\" : 250,\n                    \"lastyear\" : 30\n                },\n                {\n                    \"userId\": 32,\n                    \"username\": \"Sugar\"\n                    \"thisyear\" : 520,\n                    \"lastyear\" : 20\n                }\n            }\n        },\n        {\n            \"month\": 4,\n            \"user items\": {\n                {\n                    \"userId\": 1,\n                    \"username\": \"ku_wonderwoman\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 150\n                },\n                {\n                    \"userId\": 12,\n                    \"username\": \"Clark Kent\"\n                    \"thisyear\" : 110,\n                    \"lastyear\" : 100\n                },\n                {\n                    \"userId\": 2,\n                    \"username\": \"ไบรท์ วชิรวิทย์\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 260\n                },\n                {\n                    \"userId\": 110,\n                    \"username\": \"Jung Kook\"\n                    \"thisyear\" : 20,\n                    \"lastyear\" : 250\n                },\n                {\n                    \"userId\": 21,\n                    \"username\": \"Ji min\"\n                    \"thisyear\" : 250,\n                    \"lastyear\" : 30\n                },\n                {\n                    \"userId\": 32,\n                    \"username\": \"Sugar\"\n                    \"thisyear\" : 520,\n                    \"lastyear\" : 20\n                }\n            }\n        },\n        {\n            \"month\": 5,\n            \"user items\": {\n                {\n                    \"userId\": 1,\n                    \"username\": \"ku_wonderwoman\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 150\n                },\n                {\n                    \"userId\": 12,\n                    \"username\": \"Clark Kent\"\n                    \"thisyear\" : 110,\n                    \"lastyear\" : 100\n                },\n                {\n                    \"userId\": 2,\n                    \"username\": \"ไบรท์ วชิรวิทย์\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 260\n                },\n                {\n                    \"userId\": 110,\n                    \"username\": \"Jung Kook\"\n                    \"thisyear\" : 20,\n                    \"lastyear\" : 250\n                },\n                {\n                    \"userId\": 21,\n                    \"username\": \"Ji min\"\n                    \"thisyear\" : 250,\n                    \"lastyear\" : 30\n                },\n                {\n                    \"userId\": 32,\n                    \"username\": \"Sugar\"\n                    \"thisyear\" : 520,\n                    \"lastyear\" : 20\n                }\n            }\n        },\n        {\n            \"month\": 6,\n            \"user items\": {\n                {\n                    \"userId\": 1,\n                    \"username\": \"ku_wonderwoman\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 150\n                },\n                {\n                    \"userId\": 12,\n                    \"username\": \"Clark Kent\"\n                    \"thisyear\" : 110,\n                    \"lastyear\" : 100\n                },\n                {\n                    \"userId\": 2,\n                    \"username\": \"ไบรท์ วชิรวิทย์\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 260\n                },\n                {\n                    \"userId\": 110,\n                    \"username\": \"Jung Kook\"\n                    \"thisyear\" : 20,\n                    \"lastyear\" : 250\n                },\n                {\n                    \"userId\": 21,\n                    \"username\": \"Ji min\"\n                    \"thisyear\" : 250,\n                    \"lastyear\" : 30\n                },\n                {\n                    \"userId\": 32,\n                    \"username\": \"Sugar\"\n                    \"thisyear\" : 520,\n                    \"lastyear\" : 20\n                }\n            }\n        },\n        {\n            \"month\": 7,\n            \"user items\": {\n                {\n                    \"userId\": 1,\n                    \"username\": \"ku_wonderwoman\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 150\n                },\n                {\n                    \"userId\": 12,\n                    \"username\": \"Clark Kent\"\n                    \"thisyear\" : 110,\n                    \"lastyear\" : 100\n                },\n                {\n                    \"userId\": 2,\n                    \"username\": \"ไบรท์ วชิรวิทย์\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 260\n                },\n                {\n                    \"userId\": 110,\n                    \"username\": \"Jung Kook\"\n                    \"thisyear\" : 20,\n                    \"lastyear\" : 250\n                },\n                {\n                    \"userId\": 21,\n                    \"username\": \"Ji min\"\n                    \"thisyear\" : 250,\n                    \"lastyear\" : 30\n                },\n                {\n                    \"userId\": 32,\n                    \"username\": \"Sugar\"\n                    \"thisyear\" : 520,\n                    \"lastyear\" : 20\n                }\n            }\n        },\n        {\n            \"month\": 8,\n            \"user items\": {\n                {\n                    \"userId\": 1,\n                    \"username\": \"ku_wonderwoman\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 150\n                },\n                {\n                    \"userId\": 12,\n                    \"username\": \"Clark Kent\"\n                    \"thisyear\" : 110,\n                    \"lastyear\" : 100\n                },\n                {\n                    \"userId\": 2,\n                    \"username\": \"ไบรท์ วชิรวิทย์\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 260\n                },\n                {\n                    \"userId\": 110,\n                    \"username\": \"Jung Kook\"\n                    \"thisyear\" : 20,\n                    \"lastyear\" : 250\n                },\n                {\n                    \"userId\": 21,\n                    \"username\": \"Ji min\"\n                    \"thisyear\" : 250,\n                    \"lastyear\" : 30\n                },\n                {\n                    \"userId\": 32,\n                    \"username\": \"Sugar\"\n                    \"thisyear\" : 520,\n                    \"lastyear\" : 20\n                }\n            }\n        },\n        {\n            \"month\": 9,\n            \"user items\": {\n                {\n                    \"userId\": 1,\n                    \"username\": \"ku_wonderwoman\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 150\n                },\n                {\n                    \"userId\": 12,\n                    \"username\": \"Clark Kent\"\n                    \"thisyear\" : 110,\n                    \"lastyear\" : 100\n                },\n                {\n                    \"userId\": 2,\n                    \"username\": \"ไบรท์ วชิรวิทย์\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 260\n                },\n                {\n                    \"userId\": 110,\n                    \"username\": \"Jung Kook\"\n                    \"thisyear\" : 20,\n                    \"lastyear\" : 250\n                },\n                {\n                    \"userId\": 21,\n                    \"username\": \"Ji min\"\n                    \"thisyear\" : 250,\n                    \"lastyear\" : 30\n                },\n                {\n                    \"userId\": 32,\n                    \"username\": \"Sugar\"\n                    \"thisyear\" : 520,\n                    \"lastyear\" : 20\n                }\n            }\n        },\n        {\n            \"month\": 10,\n            \"user items\": {\n                {\n                    \"userId\": 1,\n                    \"username\": \"ku_wonderwoman\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 150\n                },\n                {\n                    \"userId\": 12,\n                    \"username\": \"Clark Kent\"\n                    \"thisyear\" : 110,\n                    \"lastyear\" : 100\n                },\n                {\n                    \"userId\": 2,\n                    \"username\": \"ไบรท์ วชิรวิทย์\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 260\n                },\n                {\n                    \"userId\": 110,\n                    \"username\": \"Jung Kook\"\n                    \"thisyear\" : 20,\n                    \"lastyear\" : 250\n                },\n                {\n                    \"userId\": 21,\n                    \"username\": \"Ji min\"\n                    \"thisyear\" : 250,\n                    \"lastyear\" : 30\n                },\n                {\n                    \"userId\": 32,\n                    \"username\": \"Sugar\"\n                    \"thisyear\" : 520,\n                    \"lastyear\" : 20\n                }\n            }\n        },\n        {\n            \"month\": 11,\n            \"user items\": {\n                {\n                    \"userId\": 1,\n                    \"username\": \"ku_wonderwoman\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 150\n                },\n                {\n                    \"userId\": 12,\n                    \"username\": \"Clark Kent\"\n                    \"thisyear\" : 110,\n                    \"lastyear\" : 100\n                },\n                {\n                    \"userId\": 2,\n                    \"username\": \"ไบรท์ วชิรวิทย์\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 260\n                },\n                {\n                    \"userId\": 110,\n                    \"username\": \"Jung Kook\"\n                    \"thisyear\" : 20,\n                    \"lastyear\" : 250\n                },\n                {\n                    \"userId\": 21,\n                    \"username\": \"Ji min\"\n                    \"thisyear\" : 250,\n                    \"lastyear\" : 30\n                },\n                {\n                    \"userId\": 32,\n                    \"username\": \"Sugar\"\n                    \"thisyear\" : 520,\n                    \"lastyear\" : 20\n                }\n            }\n        },\n        {\n            \"month\": 12,\n            \"user items\": {\n                {\n                    \"userId\": 1,\n                    \"username\": \"ku_wonderwoman\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 150\n                },\n                {\n                    \"userId\": 12,\n                    \"username\": \"Clark Kent\"\n                    \"thisyear\" : 110,\n                    \"lastyear\" : 100\n                },\n                {\n                    \"userId\": 2,\n                    \"username\": \"ไบรท์ วชิรวิทย์\"\n                    \"thisyear\" : 300,\n                    \"lastyear\" : 260\n                },\n                {\n                    \"userId\": 110,\n                    \"username\": \"Jung Kook\"\n                    \"thisyear\" : 20,\n                    \"lastyear\" : 250\n                },\n                {\n                    \"userId\": 21,\n                    \"username\": \"Ji min\"\n                    \"thisyear\" : 250,\n                    \"lastyear\" : 30\n                },\n                {\n                    \"userId\": 32,\n                    \"username\": \"Sugar\"\n                    \"thisyear\" : 520,\n                    \"lastyear\" : 20\n                }\n            }\n        }\n    ]\n"
				}
			]
		},
		{
			"name": "logout",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/logout/:id",
					"host": [
						"{{url}}"
					],
					"path": [
						"logout",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "id",
							"description": "user id"
						}
					]
				},
				"description": "This API will allow user to gracefully log out."
			},
			"response": [
				{
					"name": "logout",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/logout/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"logout",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "user id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n    \"message\": \"User successfully logged out.\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://api.example.com"
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "url_localhost",
			"value": "https://api.example.com"
		}
	]
}